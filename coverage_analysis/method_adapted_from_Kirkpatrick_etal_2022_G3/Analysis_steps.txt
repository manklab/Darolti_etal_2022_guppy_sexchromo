#Coverage Analysis Steps (method adapted from Kirkpatrick et al. 2022 G3):
#Note: All genome fasta files are in the folder "genomes" and all sample fastq files are in the folder "reads".
#Note: Names of fastq files are of the format "sample_R1.fastq" or "sample_R2.fastq"

# 1. Align reads to each genome using Bowtie2

#Create genome index with bowtie2
for genome in ./genomes/*.fa; do 
	echo "bowtie2-build -f $genome $genome"
	bowtie2-build -f $genome $genome
done

#Map reads to genome with bowtie2
python2 bowtie2_map.py ./genomes ./reads

#Sort files
for file in ./reads/*_bowtie2.sam; do 
	echo "samtools sort -O bam -T ${file%.*}.sort -o ${file%.*}_sort.bam $file"
	samtools sort -O bam -T ${file%.*}.sort -o ${file%.*}_sort.bam $file
done


# 2. Remove duplicates using Picard Tools
for file in ./reads/*_bowtie2_sort.bam; do 
	echo "java -jar /Linux/picard-tools-2.0.1/picard.jar MarkDuplicates I=$file O=${file%.*}_rmdup.bam M=${file%.*}_dupmetrics.txt REMOVE_DUPLICATES=true MAX_FILE_HANDLES_FOR_READ_ENDS_MAP=2000"
	java -jar /Linux/picard-tools-2.0.1/picard.jar MarkDuplicates I=$file O=${file%.*}_rmdup.bam M=${file%.*}_dupmetrics.txt REMOVE_DUPLICATES=true MAX_FILE_HANDLES_FOR_READ_ENDS_MAP=2000
	samtools index ${file%.*}_rmdup.bam
done


# 3. Estimate coverage in 50kb windows using bedtools

#Get sequence lengths for each genome. Run separately for each genome.
python2 get_sequence_length.py genome.fa genome_length.txt

#Make windows and run bedtools multicov
window=50000 #with the exception of P. wingei analyses that use the P. wingei de novo assembly, for which we used window=10000
for genome in ./genomes/*_length.txt; do
	echo "bedtools makewindows -g $genome -w $window > ${genome%.*}_windows50kb.txt"
	bedtools makewindows -g $genome -w $window > ${genome%.*}_windows50kb.txt
	fname=$(basename "$genome" | awk -F'[_]' '{print $1}')
	echo "$fname"
	for file in ./reads/*_bowtie2_sort_rmdup.bam; do
		if [[ "$file" == *"$fname"* ]];then
			echo "bedtools multicov -bams $file -bed ${genome%.*}_windows50kb.txt > ${file%.*}_multicov.txt"
			bedtools multicov -bams $file -bed ${genome%.*}_windows50kb.txt > ${file%.*}_multicov.txt
		fi
	done
done


# 4. Calculate and plot male:female coverage fold change

#normalize coverage values: run normalize_coverage.R script
#move normalized coverage files into separate male and female folders (do this for each analysis that used a different genome)

#extract average coverage for each sex
python2 extract_coverage.py ./females_folder coverage_females.txt
python2 extract_coverage.py ./males_folder coverage_males.txt

#calculate coverage fold change
python2 coverage_fold_change.py coverage_females.txt coverage_males.txt coverage_fold_change.txt

#for analyses that used the X. maculatus or P. reticulata reference genomes and additional step is required to account for inversions on the X chromosome
python2 inversion_Xmac.py coverage_fold_change.txt coverage_fold_change_inversion.txt
python2 inversion_Pret.py coverage_fold_change.txt coverage_fold_change_inversion.txt

#moving average plot: run plot_coverage.R
